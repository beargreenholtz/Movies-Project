@use 'sass:map';

@use '@/styles/variables.scss';

@import 'https://fonts.googleapis.com/css?family=Montserrat:300,400,700,800';


html,
body {
    font-family: Montserrat, helvetica, arial, sans-serif;
    font-size: 0.9rem;
    font-weight: 400;
}



.movieCard {
    position: relative;
    display: block;
    width: 800px;
    height: 350px;
    margin: map.get(variables.$sizes, spacing-xxl-3) auto;
    overflow: hidden;
    border-radius: 10px;
    box-shadow: 0 0 120px -25px #00000080;
    transition: all 0.4s;

    &:hover {
        box-shadow: 0 0 80px -25px #00000080;
        transition: all 0.4s;
        transform: scale(1.02);
    }

    .infoSection {
        position: absolute;
        z-index: 2;
        width: 100%;
        height: 100%;
        background-blend-mode: multiply;
        border-radius: 10px;

        .movieHeader {
            position: relative;
            height: 40%;
            padding: map.get(variables.$sizes, spacing-xs);

            h1 {
                font-size: map.get(variables.$sizes, spacing-l);
                font-weight: 400;
                color: map.get(variables.$colors, primary-black);
            }

            h4 {
                font-weight: 400;
                color: map.get(variables.$colors, primary-grey);
            }

            .minutes {
                display: inline-block;
                padding: map.get(variables.$sizes, spacing-s);
                margin-top: map.get(variables.$sizes, spacing-xl);
                color: map.get(variables.$colors, primary-grey);
                border: 1px solid #0000000d;
                border-radius: 5px;
            }

            .type {
                display: inline-block;
                inset-block-start: 10px;
                color: map.get(variables.$colors, primary-grey);
            }

            .locandina {
                position: relative;
                float: left;
                height: 120px;
                margin-inline-end: map.get(variables.$sizes, spacing-xl);
                box-shadow: 0 0 20px -10px #00000080;
            }
        }

        .movieDesc {
            height: 50%;
            padding: map.get(variables.$sizes, spacing-xxl);

            .text {
                color: map.get(variables.$colors, primary-grey);
            }
        }


    }

    .blurBack {
        position: absolute;
        top: 0;
        inset-inline-end: 0;
        z-index: 1;
        height: 100%;
        background-size: cover;
        border-radius: 11px;
    }
}

@media screen and (min-width: 768px) {
    .movieHeader {
        width: 65%;
    }

    .movieDesc {
        width: 50%;
    }

    .infoSection {
        background: linear-gradient(to right, #e5e6e6 50%, transparent 100%);
    }

    .blurBack {
        width: 80%;
        background-position: -100% 10% !important;
    }
}

.watchVidBtn {
    position: absolute;
    inset-block-end: 0;
    z-index: 10;
    width: 100px;
    height: 50px;
    font-size: map.get(variables.$sizes, spacing-l);
    color: map.get(variables.$colors, primary-white);
    background-color: map.get(variables.$colors, accent-red);
    border: none;
}

.center {
    display: flex;
    align-items: center;
    justify-content: center;
}

.deleteBtn {
    position: absolute;
    z-index: 10;
    width: 100px;
    height: 50px;
    inset-inline-end: 0;
    inset-block-end: 0;
    font-size: map.get(variables.$sizes, spacing-l);
    color: map.get(variables.$colors, primary-white);
    background-color: map.get(variables.$colors, accent-red);
    border: none;
}


.heart {
    width: 100px;
    height: 100px;
    cursor: pointer;
    background: url("https://cssanimation.rocks/images/posts/steps/heart.png") no-repeat;
    background-position: 0 0;
    transition: background-position 1s steps(28);
    transition-duration: 0s;
}


.placement {
    position: absolute;
    inset-inline-end: 0;
    z-index: 10;
    display: flex;
    flex-direction: column;
    align-items: center;
}

.isActive {
    background-position: -2800px 0;
    transition-duration: 1s;
}



.likeCounter {
    position: relative;
    padding: map.get(variables.$sizes, spacing-m);
    font-weight: 700;
    background: map.get(variables.$colors, primary-white);
    border-radius: map.get(variables.$sizes, spacing-s);

    &::after {
        position: absolute;
        top: calc(-1 * map.get(variables.$sizes, spacing-s));
        inset-inline-end: calc(-1 * map.get(variables.$sizes, spacing-s));
        z-index: -1;
        width: calc(100% + map.get(variables.$sizes, spacing-s) * 2);
        height: calc(100% + map.get(variables.$sizes, spacing-s) * 2);
        content: '';
        background: linear-gradient(60deg, #f79533, #f37055, #ef4e7b, #a166ab, #5073b8, #1098ad, #07b39b, #6fba82);
        background-size: 300% 300%;
        border-radius: calc(2 * map.get(variables.$sizes, spacing-s));
        animation: animatedgradient 3s ease alternate infinite;
    }


    @keyframes animatedgradient {
        0% {
            background-position: 0% 50%;
        }

        50% {
            background-position: 100% 50%;
        }

        100% {
            background-position: 0% 50%;
        }
    }

}